name: Django API

on:
  push:
    branches: [master, dev]

  pull_request:
    branches:
      - '*'
  
jobs:
  review-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: "Analyzing with pylint"
        uses: codacy/codacy-analysis-cli-action@master
        with:
          tool: pylint
          force-file-permissions: true

      - name: "Analyzing with bandit"
        uses: codacy/codacy-analysis-cli-action@master
        with:
          tool: bandit
          force-file-permissions: true

  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@master

    - uses: actions/cache@master
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: "Preconfiguring"
      run: |
        cp .env.example .env.dev
        sed -i "s/SECRET_KEY=/SECRET_KEY=fupswltefA9efredrufihUSTOwamc/" ".env.dev"
        sed -i "s/DB_NAME=/DB_NAME=postgres/" ".env.dev"
        sed -i "s/DB_USER=/DB_USER=postgres/" ".env.dev"
        sed -i "s/DB_PASSWORD=/DB_PASSWORD=postgres/" ".env.dev"
        sed -i "s/DB_HOST=/DB_HOST=localhost/" ".env.dev"
    
    - name: Installing dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: "Making and executing migrations"
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Run test
      run: |
        python manage.py test