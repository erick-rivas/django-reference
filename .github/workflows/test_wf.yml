name: TestWF

on:
  workflow_call:

jobs:

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - uses: actions/cache@master
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: "Preconfiguring"
      run: |
        cp .env.example .env.dev
        sed -i "s/^SECRET_KEY=/SECRET_KEY=fupswltefA9efredrufihUSTOwamc/" ".env.dev"
        sed -i "s/^DB_NAME=/DB_NAME=postgres/" ".env.dev"
        sed -i "s/^DB_USER=/DB_USER=postgres/" ".env.dev"
        sed -i "s/^DB_PASSWORD=/DB_PASSWORD=postgres/" ".env.dev"
        sed -i "s/^DB_HOST=/DB_HOST=localhost/" ".env.dev"
        sed -i "s/^REDIS_HOST=/REDIS_HOST=localhost/" ".env.dev"

    - name: "Installing dependencies"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: "Making and executing migrations"
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: "Running tests"
      run: |
        python manage.py test